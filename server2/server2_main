#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <arpa/inet.h>
#include <string.h>

#include <sys/stat.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <unistd.h>
#include <wait.h>
#include <netinet/in.h>
#include <fcntl.h>

#include "../sockwrap.h"
#include "../errlib.h"
#include "../send.h"

char *prog_name;

int main (int argc, char *argv[])
{
	prog_name = argv[0];

	int socket, socket1, childpid;
	struct sockaddr_in client;
	socklen_t addrlen;

	if(argc != 2){
		printf("Number of params is incorrect. Usage: %s <src_port>\n", prog_name);
		return -1;
	}

	socket = Socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
	estabilish_connection_server(socket, argv[1]);
	addrlen = sizeof(struct sockaddr_in);

	while(1){ 
		printf("Waiting for connections..\n");	
		socket1 = Accept(socket, (struct sockaddr*) &client, &addrlen);

		childpid = fork();

		if(childpid < 0 ) {
			printf("fork() failed\n");
		}else if(childpid > 0) {
			Close(socket1);
		} else {
			printf("- Client connection succeeded with ip = %s:%u, pid = %d\n\n", inet_ntoa(client.sin_addr), ntohs(client.sin_port),getpid());
			Close(socket);

			int ret = send_file_to_client(socket1);
			if(ret < 0) printf("\n --(%d) File not sent!!\n", getpid());

			Close(socket1);
			printf("\n- (%d) Client connection closed\n\n", getpid());
			exit(0);
		}
	}
	return 0;
}
